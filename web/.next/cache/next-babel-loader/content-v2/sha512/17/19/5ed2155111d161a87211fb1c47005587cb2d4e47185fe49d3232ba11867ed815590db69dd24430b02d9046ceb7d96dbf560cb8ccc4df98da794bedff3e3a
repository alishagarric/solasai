{"ast":null,"code":"import _classCallCheck from \"/Users/alishagarric/Projects/react/volume/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/alishagarric/Projects/react/volume/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/alishagarric/Projects/react/volume/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"      \\n      :root {\\n        --clrPrimary: \", \";\\n        --clrSecondary: \", \";\\n        --clrBackground: \", \";\\n        --clrForeground: \", \";\\n        --overlayMode: \", \";\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  ::-moz-selection { background: \", \"; color: \", \" }\\n  ::selection { background: \", \"; color: \", \" }\\n\\n  :root {\\n    --clrPrimary: \", \";\\n    --clrSecondary: \", \";\\n    --clrBackground: \", \";\\n    --clrForeground: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Color.js:\n// This is the sitewide palette.\n// Imports\n// _______________________________________________________\nimport { createGlobalStyle } from \"styled-components\"; // Begin Component\n// _______________________________________________________\n\nexport var Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n  // Core Colors\n  Primary: \"#000000\",\n  Secondary: \"#FFB4A3\",\n  Background: \"#FFFDEB\",\n  Text: \"#000000\",\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFF6EE\",\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n  Mustard: \"#EDD45D\",\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n  // Feedback Palette\n  Warning: \"#FF8760\",\n  Success: \"#40DA33\"\n};\n/**\n *\n * @name ColorContext_Defaults\n * @description Defaults for our theming context\n *\n */\n\n/*\nexport const ColorContext_Defaults: LXLT_ColorTheme = {\n  primary: Color.Primary,\n  secondary: Color.Secondary,\n  foreground: Color.Text,\n  background: Color.Background,\n  setTheme: () => {},\n};\n*/\n\n/**\n *\n * @name useColorContext\n * @description Our hook to update our color context\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n\n/*\nexport const useColorContext = (theme?: LXLT_ColorTheme): LXLT_ColorTheme => {\n  let ColorContext = ColorContext_Defaults;\n  if (theme ){\n    ColorContext = {\n      primary: theme.primary,\n      secondary: theme.secondary,\n      foreground: theme.foreground,\n      background: theme.background,\n      setTheme: () => {},\n    }\n  } \n\n  const [colorTheme, setColorTheme] = React.useState(ColorContext);\n\n  const setTheme = React.useCallback(\n    \n    (currentColorTheme: LXLT_ColorTheme): void => {\n      console.log(\"This?\");\n      setColorTheme(currentColorTheme);\n    },\n    []\n  );\n\n  return {\n    ...colorTheme,\n    setTheme,\n  };\n};\n*/\n\n/**\n *\n * @name ColorContext\n * @description Our context to provide color themes\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n\n/*\nexport const ColorContext = React.createContext<LXLT_ColorTheme>(\n  ColorContext_Defaults\n);\n*/\n\n/**\n *\n * @name Palette\n * @description Global CSS Variables for palette\n *\n */\n\nexport var Palette = createGlobalStyle(_templateObject(), Color.varForeground, Color.varBackground, Color.varForeground, Color.varBackground, Color.Primary, Color.Secondary, Color.Background, Color.Text); //////////////////////////////////////////////////////////////////////\n// End Component\n\nexport var ColorUtils = function ColorUtils() {\n  _classCallCheck(this, ColorUtils);\n};\n\n_defineProperty(ColorUtils, \"SetThemeFromServer\", function (serverTheme) {\n  return createGlobalStyle(_templateObject2(), serverTheme.primary, serverTheme.secondary, serverTheme.background, serverTheme.foreground, serverTheme.overlayMode);\n});","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/constants/styles/Color.tsx"],"names":["createGlobalStyle","Color","varPrimary","varSecondary","varBackground","varForeground","Primary","Secondary","Background","Text","Black","Nightsky","Warmsky","Gravel","Slate","Tan","Gray","Blush","Cream","White","Clay","Nova","Sunlight","Sunset","Mustard","Galaxy","Deepsea","Ocean","Sky","Dino","Eggplant","Lilac","Warning","Success","Palette","ColorUtils","serverTheme","primary","secondary","background","foreground","overlayMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA,SAASA,iBAAT,QAAuC,mBAAvC,C,CAEA;AACA;;AAiBA,OAAO,IAAMC,KAAK,GAAG;AACnB;AACAC,EAAAA,UAAU,EAAE,mBAFO;AAGnBC,EAAAA,YAAY,EAAE,qBAHK;AAInBC,EAAAA,aAAa,EAAE,sBAJI;AAKnBC,EAAAA,aAAa,EAAE,sBALI;AAOnB;AACAC,EAAAA,OAAO,EAAE,SARU;AASnBC,EAAAA,SAAS,EAAE,SATQ;AAUnBC,EAAAA,UAAU,EAAE,SAVO;AAWnBC,EAAAA,IAAI,EAAE,SAXa;AAanB;AACAC,EAAAA,KAAK,EAAE,SAdY;AAenBC,EAAAA,QAAQ,EAAE,SAfS;AAgBnBC,EAAAA,OAAO,EAAE,SAhBU;AAiBnBC,EAAAA,MAAM,EAAE,SAjBW;AAkBnBC,EAAAA,KAAK,EAAE,SAlBY;AAmBnBC,EAAAA,GAAG,EAAE,SAnBc;AAoBnBC,EAAAA,IAAI,EAAE,SApBa;AAqBnBC,EAAAA,KAAK,EAAE,SArBY;AAsBnBC,EAAAA,KAAK,EAAE,SAtBY;AAuBnBC,EAAAA,KAAK,EAAE,SAvBY;AAyBnB;AACAC,EAAAA,IAAI,EAAE,SA1Ba;AA2BnBC,EAAAA,IAAI,EAAE,SA3Ba;AA4BnBC,EAAAA,QAAQ,EAAE,SA5BS;AA6BnBC,EAAAA,MAAM,EAAE,SA7BW;AA8BnBC,EAAAA,OAAO,EAAE,SA9BU;AAgCnB;AACAC,EAAAA,MAAM,EAAE,SAjCW;AAkCnBC,EAAAA,OAAO,EAAE,SAlCU;AAmCnBC,EAAAA,KAAK,EAAE,SAnCY;AAoCnBC,EAAAA,GAAG,EAAE,SApCc;AAqCnBC,EAAAA,IAAI,EAAE,SArCa;AAsCnBC,EAAAA,QAAQ,EAAE,SAtCS;AAuCnBC,EAAAA,KAAK,EAAE,SAvCY;AAyCnB;AACAC,EAAAA,OAAO,EAAE,SA1CU;AA2CnBC,EAAAA,OAAO,EAAE;AA3CU,CAAd;AA8CP;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAGlC,iBAAH,oBACeC,KAAK,CAACI,aADrB,EAC8CJ,KAAK,CAACG,aADpD,EAEUH,KAAK,CAACI,aAFhB,EAEyCJ,KAAK,CAACG,aAF/C,EAKAH,KAAK,CAACK,OALN,EAMEL,KAAK,CAACM,SANR,EAOGN,KAAK,CAACO,UAPT,EAQGP,KAAK,CAACQ,IART,CAAb,C,CAYP;AACA;;AAGA,WAAa0B,UAAb;AAAA;AAAA;;gBAAaA,U,wBAEiB,UAACC,WAAD,EAAkC;AAC5D,SAAOpC,iBAAP,qBAEoBoC,WAAW,CAACC,OAFhC,EAGsBD,WAAW,CAACE,SAHlC,EAIuBF,WAAW,CAACG,UAJnC,EAKuBH,WAAW,CAACI,UALnC,EAMqBJ,WAAW,CAACK,WANjC;AASD,C","sourcesContent":["// Color.js:\n// This is the sitewide palette.\n\n// Imports\n// _______________________________________________________\n\nimport React from \"react\";\nimport { createGlobalStyle, css } from \"styled-components\";\n\n// Begin Component\n// _______________________________________________________\n\nexport type LXLT_ColorTheme = {\n  name?:\n    | \"default\"\n    | \"salmon\"\n    | \"lemon\"\n    | \"fig\"\n    | \"oyster\";\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n  overlayMode: string;\n  setTheme?: (theme: LXLT_ColorTheme) => void;\n};\n\nexport const Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n\n  // Core Colors\n  Primary: \"#000000\",\n  Secondary: \"#FFB4A3\",\n  Background: \"#FFFDEB\",\n  Text: \"#000000\",\n\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFF6EE\",\n\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n  Mustard: \"#EDD45D\",\n\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n\n  // Feedback Palette\n  Warning: \"#FF8760\",\n  Success: \"#40DA33\",\n};\n\n/**\n *\n * @name ColorContext_Defaults\n * @description Defaults for our theming context\n *\n */\n/*\nexport const ColorContext_Defaults: LXLT_ColorTheme = {\n  primary: Color.Primary,\n  secondary: Color.Secondary,\n  foreground: Color.Text,\n  background: Color.Background,\n  setTheme: () => {},\n};\n*/\n\n/**\n *\n * @name useColorContext\n * @description Our hook to update our color context\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n/*\nexport const useColorContext = (theme?: LXLT_ColorTheme): LXLT_ColorTheme => {\n  let ColorContext = ColorContext_Defaults;\n  if (theme ){\n    ColorContext = {\n      primary: theme.primary,\n      secondary: theme.secondary,\n      foreground: theme.foreground,\n      background: theme.background,\n      setTheme: () => {},\n    }\n  } \n\n  const [colorTheme, setColorTheme] = React.useState(ColorContext);\n\n  const setTheme = React.useCallback(\n    \n    (currentColorTheme: LXLT_ColorTheme): void => {\n      console.log(\"This?\");\n      setColorTheme(currentColorTheme);\n    },\n    []\n  );\n\n  return {\n    ...colorTheme,\n    setTheme,\n  };\n};\n*/\n\n/**\n *\n * @name ColorContext\n * @description Our context to provide color themes\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n/*\nexport const ColorContext = React.createContext<LXLT_ColorTheme>(\n  ColorContext_Defaults\n);\n*/\n\n/**\n *\n * @name Palette\n * @description Global CSS Variables for palette\n *\n */\nexport const Palette = createGlobalStyle`\n  ::-moz-selection { background: ${Color.varForeground}; color: ${Color.varBackground} }\n  ::selection { background: ${Color.varForeground}; color: ${Color.varBackground} }\n\n  :root {\n    --clrPrimary: ${Color.Primary};\n    --clrSecondary: ${Color.Secondary};\n    --clrBackground: ${Color.Background};\n    --clrForeground: ${Color.Text};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n\n\nexport class ColorUtils {\n\n  static SetThemeFromServer = (serverTheme: LXLT_ColorTheme) => {\n    return createGlobalStyle`      \n      :root {\n        --clrPrimary: ${serverTheme.primary};\n        --clrSecondary: ${serverTheme.secondary};\n        --clrBackground: ${serverTheme.background};\n        --clrForeground: ${serverTheme.foreground};\n        --overlayMode: ${serverTheme.overlayMode};\n      }\n    `;\n  }\n}"]},"metadata":{},"sourceType":"module"}