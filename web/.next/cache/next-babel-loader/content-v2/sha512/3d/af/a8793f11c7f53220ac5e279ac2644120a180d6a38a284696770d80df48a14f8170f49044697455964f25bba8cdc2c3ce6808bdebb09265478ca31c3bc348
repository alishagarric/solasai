{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/side-projects/solas/web/components/Sections/InteractiveCards/InteractiveCards.tsx\";\n// Core\nimport React from \"react\";\nimport { Inner } from \"../../Inner\";\nimport { Bird } from \"../../_svg/Birds/Bird\";\nimport { CircleDecor } from \"../../_svg/CircleDecor/CircleDecor\";\nimport { Anchor } from \"../Anchor\";\nimport { Button } from \"../Button\"; // Styles\n\nimport { InteractiveCardsClassName, InteractiveCardsStyle } from \"./styles.scss\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveCards\n * @author Alisha Garric\n * @requires /studio/sections/InteractiveCards\n *\n */\nexport class InteractiveCards extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: 0,\n      flippedCard: -1\n    };\n    this.updateActiveSet = this.updateActiveSet.bind(this);\n  }\n\n  updateActiveSet(index) {\n    this.setState({\n      activeSet: index\n    });\n  }\n\n  updateFlippedCard(index) {\n    if (this.state.flippedCard == index) {\n      this.setState({\n        flippedCard: -1\n      });\n    } else {\n      this.setState({\n        flippedCard: index\n      });\n    }\n  }\n\n  render() {\n    let {\n      cta,\n      card_sets,\n      headline\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(InteractiveCardsStyle, {\n      className: `${InteractiveCardsClassName}`,\n      children: [/*#__PURE__*/_jsxDEV(Anchor, {\n        id: \"how\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inner, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${InteractiveCardsClassName}__content`,\n          children: [/*#__PURE__*/_jsxDEV(Bird, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CircleDecor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: `${InteractiveCardsClassName}__headline h3`,\n            children: headline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${InteractiveCardsClassName}__header`,\n            children: [card_sets && card_sets.length > 0 && /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: `${InteractiveCardsClassName}__header__card-sets-nav`,\n              children: card_sets.map((set, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${InteractiveCardsClassName}__header__card-sets-nav__item ${this.state.activeSet == idx ? \"__active\" : \"\"}`,\n                  onClick: () => this.updateActiveSet(idx),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    label: set.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), cta && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), card_sets && card_sets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${InteractiveCardsClassName}__card-sets`,\n            children: card_sets.map((set, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${InteractiveCardsClassName}__card-sets__cards ${this.state.activeSet == idx ? \"__active\" : \"\"}`,\n                children: set.cards && set.cards.length > 0 && set.cards.map((card, idxx) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `${InteractiveCardsClassName}__card`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `${InteractiveCardsClassName}__card__inner`,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `${InteractiveCardsClassName}__card__inner__label`,\n                        children: \"Step\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `${InteractiveCardsClassName}__card__inner__index headline`,\n                        children: idxx\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: `${InteractiveCardsClassName}__card__inner__front`,\n                        children: card.front_text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: `${InteractiveCardsClassName}__card__inner__back`,\n                        children: card.back_text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 29\n                    }, this)\n                  }, (idxx + 1) * (idx + 1), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n; // End Component\n// __________________________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/side-projects/solas/web/components/Sections/InteractiveCards/InteractiveCards.tsx"],"names":["React","Inner","Bird","CircleDecor","Anchor","Button","InteractiveCardsClassName","InteractiveCardsStyle","InteractiveCards","PureComponent","constructor","props","state","activeSet","flippedCard","updateActiveSet","bind","index","setState","updateFlippedCard","render","cta","card_sets","headline","length","map","set","idx","label","cards","card","idxx","front_text","back_text"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;;AACA,SACEC,yBADF,EAEEC,qBAFF,QAGO,eAHP,C,CAKA;AACA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,OAAO,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,aAArC,CAGN;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAwC;AAChD,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXC,MAAAA,WAAW,EAAE,CAAC;AAFH,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACF;;AAGAD,EAAAA,eAAe,CAAEE,KAAF,EAAkB;AAC/B,SAAKC,QAAL,CAAc;AACZL,MAAAA,SAAS,EAAEI;AADC,KAAd;AAGD;;AAEDE,EAAAA,iBAAiB,CAAEF,KAAF,EAAiB;AAChC,QAAI,KAAKL,KAAL,CAAWE,WAAX,IAA0BG,KAA9B,EAAqC;AACnC,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAE,CAAC;AADF,OAAd;AAGD,KAJD,MAIO;AACL,WAAKI,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAEG;AADD,OAAd;AAGD;AACF;;AAGDG,EAAAA,MAAM,GAAG;AAEP,QAAI;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,SAAP;AAAkBC,MAAAA;AAAlB,QAA8B,KAAKZ,KAAvC;AACA,wBACE,QAAC,qBAAD;AAAuB,MAAA,SAAS,EAAG,GAAEL,yBAA0B,EAA/D;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,GAAEA,yBAA0B,WAA7C;AAAA,kCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAG,GAAEA,yBAA0B,eAA5C;AAAA,sBAA6DiB;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAHF,eAKE;AAAK,YAAA,SAAS,EAAG,GAAEjB,yBAA0B,UAA7C;AAAA,uBACGgB,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,iBACC;AAAK,cAAA,SAAS,EAAG,GAAElB,yBAA0B,yBAA7C;AAAA,wBACGgB,SAAS,CAACG,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,oCACE;AAEE,kBAAA,SAAS,EAAG,GAAErB,yBAA0B,iCAAgC,KAAKM,KAAL,CAAWC,SAAX,IAAwBc,GAAxB,GAA8B,UAA9B,GAA2C,EAAG,EAFxH;AAGE,kBAAA,OAAO,EAAE,MAAM,KAAKZ,eAAL,CAAqBY,GAArB,CAHjB;AAAA,yCAKE,QAAC,MAAD;AAAQ,oBAAA,KAAK,EAAED,GAAG,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA;AALF,mBACOD,GADP;AAAA;AAAA;AAAA;AAAA,wBADF;AASD,eAVA;AADH;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAgBGN,GAAG,iBACF,qCAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EA0BGC,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,iBACC;AAAK,YAAA,SAAS,EAAG,GAAElB,yBAA0B,aAA7C;AAAA,sBACGgB,SAAS,CAACG,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,kCACE;AAAe,gBAAA,SAAS,EAAG,GAAErB,yBAA0B,sBAAqB,KAAKM,KAAL,CAAWC,SAAX,IAAwBc,GAAxB,GAA8B,UAA9B,GAA2C,EAAG,EAA1H;AAAA,0BACGD,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACG,KAAJ,CAAUL,MAAV,GAAmB,CAAhC,IAAqCE,GAAG,CAACG,KAAJ,CAAUJ,GAAV,CAAc,CAACK,IAAD,EAAOC,IAAP,KAAgB;AAClE,sCACE;AAAkC,oBAAA,SAAS,EAAG,GAAEzB,yBAA0B,QAA1E;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAG,GAAEA,yBAA0B,eAA7C;AAAA,8CACE;AAAK,wBAAA,SAAS,EAAG,GAAEA,yBAA0B,sBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAK,wBAAA,SAAS,EAAG,GAAEA,yBAA0B,+BAA7C;AAAA,kCAA8EyB;AAA9E;AAAA;AAAA;AAAA;AAAA,8BAFF,eAGE;AAAG,wBAAA,SAAS,EAAG,GAAEzB,yBAA0B,sBAA3C;AAAA,kCAAmEwB,IAAI,CAACE;AAAxE;AAAA;AAAA;AAAA;AAAA,8BAHF,eAIE;AAAG,wBAAA,SAAS,EAAG,GAAE1B,yBAA0B,qBAA3C;AAAA,kCAAkEwB,IAAI,CAACG;AAAvE;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBAAU,CAACF,IAAI,GAAG,CAAR,KAAcJ,GAAG,GAAG,CAApB,CAAV;AAAA;AAAA;AAAA;AAAA,0BADF;AAUD,iBAXqC;AADxC,iBAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,sBADF;AAgBD,aAjBA;AADH;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwDD;;AA3FD;AA4FD,C,CAED;AACA","sourcesContent":["// Core\nimport React from \"react\";\nimport { Inner } from \"../../Inner\";\nimport { Bird } from \"../../_svg/Birds/Bird\";\nimport { CircleDecor } from \"../../_svg/CircleDecor/CircleDecor\";\nimport { Anchor } from \"../Anchor\";\nimport { Button } from \"../Button\";\n\n// Styles\nimport {\n  InteractiveCardsClassName,\n  InteractiveCardsStyle,\n} from \"./styles.scss\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport type LMNTS_Section_InteractiveCards = {\n  headline?: string;\n  cta?: {\n    link: string;\n    label: string;\n    target?: string;\n  }\n  card_sets: {\n    label: string;\n    cards: {\n      front_text: string;\n      back_text: string;\n    }[];\n  }[];\n};\n\nexport type InteractiveCardsState = {\n  activeSet: number;\n  flippedCard: number;\n }\n\n/**\n *\n * @name InteractiveCards\n * @author Alisha Garric\n * @requires /studio/sections/InteractiveCards\n *\n */\n export class InteractiveCards extends React.PureComponent<\n LMNTS_Section_InteractiveCards,\n InteractiveCardsState\n> {\n constructor(props: LMNTS_Section_InteractiveCards) {\n    super(props);\n\n    this.state = {\n      activeSet: 0,\n      flippedCard: -1,\n    };\n\n    this.updateActiveSet = this.updateActiveSet.bind(this);\n }\n\n\n  updateActiveSet( index: number ) {\n    this.setState({\n      activeSet: index,\n    });\n  }\n\n  updateFlippedCard( index: number) {\n    if (this.state.flippedCard == index ){\n      this.setState({\n        flippedCard: -1,\n      });\n    } else {\n      this.setState({\n        flippedCard: index,\n      });\n    }\n  }\n\n\n  render() {\n\n    let { cta, card_sets, headline} = this.props;\n    return (\n      <InteractiveCardsStyle className={`${InteractiveCardsClassName}`}>\n        <Anchor id=\"how\" />\n        <Inner>\n          <div className={`${InteractiveCardsClassName}__content`}>\n            <Bird />\n            <CircleDecor />\n            <h2 className={`${InteractiveCardsClassName}__headline h3`}>{headline}</h2>\n\n            <div className={`${InteractiveCardsClassName}__header`}>\n              {card_sets && card_sets.length > 0 &&\n                <nav className={`${InteractiveCardsClassName}__header__card-sets-nav`}>\n                  {card_sets.map((set, idx) => {\n                    return (\n                      <div \n                        key={idx} \n                        className={`${InteractiveCardsClassName}__header__card-sets-nav__item ${this.state.activeSet == idx ? \"__active\" : \"\"}`}\n                        onClick={() => this.updateActiveSet(idx)}\n                      >\n                        <Button label={set.label} />\n                      </div>\n                    );\n                  })}\n                </nav>\n              }\n              {cta &&\n                <>{/*<Button link={cta.link} label={cta.label} target={cta.target} />*/}</>\n              }\n            </div>\n\n            {card_sets && card_sets.length > 0 &&\n              <div className={`${InteractiveCardsClassName}__card-sets`}>\n                {card_sets.map((set, idx) => {\n                  return (\n                    <div key={idx} className={`${InteractiveCardsClassName}__card-sets__cards ${this.state.activeSet == idx ? \"__active\" : \"\"}`}>\n                      {set.cards && set.cards.length > 0 && set.cards.map((card, idxx) => {\n                        return (\n                          <div key={(idxx + 1) * (idx + 1)} className={`${InteractiveCardsClassName}__card`}>\n                            <div className={`${InteractiveCardsClassName}__card__inner`}>\n                              <div className={`${InteractiveCardsClassName}__card__inner__label`}>Step</div>\n                              <div className={`${InteractiveCardsClassName}__card__inner__index headline`}>{idxx}</div>\n                              <p className={`${InteractiveCardsClassName}__card__inner__front`}>{card.front_text}</p>\n                              <p className={`${InteractiveCardsClassName}__card__inner__back`}>{card.back_text}</p>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            }\n          </div>\n        </Inner>\n      </InteractiveCardsStyle>\n    );\n  }\n};\n\n// End Component\n// __________________________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}