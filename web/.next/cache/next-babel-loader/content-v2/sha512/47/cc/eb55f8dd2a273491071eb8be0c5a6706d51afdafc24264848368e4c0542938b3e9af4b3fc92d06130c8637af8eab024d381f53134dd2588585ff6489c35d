{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/react/volume/web/components/Accordion/Accordion.tsx\";\n// Core\nimport React, { PureComponent } from \"react\"; // Styles\n\nimport { AccordionClassName, AccordionStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name Accordion\n * @author Alisha Garric\n *\n */\nexport class Accordion extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    let {\n      addClass,\n      key,\n      label,\n      description,\n      images\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(AccordionStyle, {\n      className: `${addClass ? addClass : AccordionClassName}__menu-nav__list__item`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${AccordionClassName}__accordion`,\n        children: [description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${AccordionClassName}__accordion__text-container`,\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), images.length > 0 && images.map((image, idxx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${AccordionClassName}__accordion__image-container`,\n            children: /*#__PURE__*/_jsxDEV(LazyImage, {\n              src: image.image,\n              alt: \"Volume Industries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, idxx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n} // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/components/Accordion/Accordion.tsx"],"names":["React","PureComponent","AccordionClassName","AccordionStyle","LazyImage","Accordion","constructor","props","state","isOpen","render","addClass","key","label","description","images","length","map","image","idxx"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC,C,CAEA;;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,eAAnD;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,MAAMC,SAAN,SAAwBJ,aAAxB,CAGL;AAEAK,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAClC,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,GAAZ;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,WAAxB;AAAqCC,MAAAA;AAArC,QAAgD,KAAKR,KAAzD;AACA,wBACE,QAAC,cAAD;AAEE,MAAA,SAAS,EAAG,GAAEI,QAAQ,GAAGA,QAAH,GAAcT,kBAAmB,wBAFzD;AAAA,8BAIE;AAAA,kBAAKW;AAAL;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAG,GAAEX,kBAAmB,aAAtC;AAAA,mBAEIY,WAAW,iBACX;AAAG,UAAA,SAAS,EAAG,GAAEZ,kBAAmB,6BAApC;AAAA,oBACGY;AADH;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAQGC,MAAM,CAACC,MAAP,GAAgB,CAAhB,IACCD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,IAAR,KAAyB;AAClC,8BACE;AAAK,YAAA,SAAS,EAAG,GAAEjB,kBAAmB,8BAAtC;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,GAAG,EAAEgB,KAAK,CAACA,KADb;AAEE,cAAA,GAAG,EAAE;AAFP;AAAA;AAAA;AAAA;AAAA;AADF,aAA0EC,IAA1E;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OACOP,GADP;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA1CD,C,CA6CF;AACA","sourcesContent":["// Core\nimport React, { PureComponent } from \"react\";\n\n// Styles\nimport { AccordionClassName, AccordionStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\nimport { CSSProperties } from \"styled-components\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LMNTS_Accordion = {\n  addClass?: string;\n  key: number;\n  label: string;\n  description?: string;\n  images: {\n    image: string;\n  }[];\n};\n\nexport type LMNTS_Accordion_State = {\n  isOpen: boolean;\n}\n\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name Accordion\n * @author Alisha Garric\n *\n */\n\n\nexport class Accordion extends PureComponent<\n  LMNTS_Accordion,\n  LMNTS_Accordion_State\n> {\n\n  constructor(props: LMNTS_Accordion) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n\n    let { addClass, key, label, description, images } = this.props;\n    return (\n      <AccordionStyle\n        key={key}\n        className={`${addClass ? addClass : AccordionClassName}__menu-nav__list__item`}\n      >\n        <h2>{label}</h2>\n        <div className={`${AccordionClassName}__accordion`}>\n\n          { description && \n            <p className={`${AccordionClassName}__accordion__text-container`}>\n              {description}\n            </p>\n          }\n\n          {images.length > 0 &&\n            images.map((image, idxx: number) => {\n              return (\n                <div className={`${AccordionClassName}__accordion__image-container`} key={idxx}>\n                  <LazyImage\n                    src={image.image}\n                    alt={\"Volume Industries\"}\n                  />\n                </div>\n              );\n            })\n          }\n        </div>\n      </AccordionStyle>\n    );\n  }\n}\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}