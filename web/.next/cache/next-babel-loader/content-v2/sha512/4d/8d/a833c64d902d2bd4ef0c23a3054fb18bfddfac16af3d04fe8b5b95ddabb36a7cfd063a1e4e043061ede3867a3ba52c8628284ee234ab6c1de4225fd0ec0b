{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alishagarric/Projects/react/volume/web/pages/_app.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// /pages/_app_.js\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useColorContext } from \"../constants/styles/Color\";\nimport { DefaultTheme, SitePages } from \"../constants/site/Settings\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nvar MyApp = function MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      router = _ref.router;\n  var pageTheme = DefaultTheme;\n\n  if (router && router.asPath) {\n    var thisPage = SitePages.filter(function (page, index) {\n      return page.link == router.asPath;\n    });\n\n    if (thisPage.length > 0) {\n      pageTheme = thisPage[0].theme;\n    }\n  }\n\n  var colorTheme = useColorContext(pageTheme);\n  console.log(\"props\", router && router.asPath); // Render our App\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(MyApp, \"MLNGL0YovU/o4k7ZWVsHcfvCWjU=\", false, function () {\n  return [useColorContext];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/pages/_app.tsx"],"names":["React","Layout","useColorContext","DefaultTheme","SitePages","MyApp","Component","pageProps","router","pageTheme","asPath","thisPage","filter","page","index","link","length","theme","colorTheme","console","log"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAAuBC,eAAvB,QAA8C,2BAA9C;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,4BAAxC,C,CAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2D;AAAA;;AAAA,MAAxDC,SAAwD,QAAxDA,SAAwD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AACvE,MAAIC,SAAS,GAAGN,YAAhB;;AACA,MAAIK,MAAM,IAAIA,MAAM,CAACE,MAArB,EAA6B;AAC3B,QAAIC,QAAQ,GAAGP,SAAS,CAACQ,MAAV,CAAkB,UAACC,IAAD,EAAOC,KAAP;AAAA,aAC/BD,IAAI,CAACE,IAAL,IAAaP,MAAM,CAACE,MADW;AAAA,KAAlB,CAAf;;AAIA,QAAKC,QAAQ,CAACK,MAAT,GAAkB,CAAvB,EAA0B;AACxBP,MAAAA,SAAS,GAAGE,QAAQ,CAAC,CAAD,CAAR,CAAYM,KAAxB;AACD;AACF;;AACD,MAAMC,UAAU,GAAGhB,eAAe,CAACO,SAAD,CAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,MAAM,IAAIA,MAAM,CAACE,MAAtC,EAZuE,CAcvE;;AACA,sBACE;AAAA,2BACE,QAAC,MAAD,kCAAYH,SAAZ;AAAA,6BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAtBD;;GAAMF,K;UAWeH,e;;;KAXfG,K;AAwBN,eAAeA,KAAf","sourcesContent":["// /pages/_app_.js\nimport React from \"react\";\nimport { AppProps } from \"next/app\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorContext, useColorContext } from \"../constants/styles/Color\";\nimport { DefaultTheme, SitePages } from \"../constants/site/Settings\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_CustomAppData = AppProps & {};\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\n\nconst MyApp = ({ Component, pageProps, router }: LMNTS_CustomAppData) => {\n  let pageTheme = DefaultTheme;\n  if (router && router.asPath ){\n    let thisPage = SitePages.filter( (page, index) =>\n      page.link == router.asPath\n    ); \n\n    if ( thisPage.length > 0 ){\n      pageTheme = thisPage[0].theme;\n    }\n  }\n  const colorTheme = useColorContext(pageTheme);\n  console.log(\"props\", router && router.asPath);\n\n  // Render our App\n  return (\n    <>\n      <Layout {...pageProps}>\n        <Component {...pageProps} />\n      </Layout>\n    </>\n  );\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}