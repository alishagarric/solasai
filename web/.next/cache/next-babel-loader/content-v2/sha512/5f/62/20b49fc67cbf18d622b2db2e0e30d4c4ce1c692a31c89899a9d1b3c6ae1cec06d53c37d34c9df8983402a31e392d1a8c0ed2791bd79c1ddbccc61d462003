{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Core\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Root } from \"../../../constants/Root\";\nimport { Base } from \"../../../constants/styles/Base\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { BottomNavMargin, BottomNavSize } from \"../../Navigation/styles.scss\"; // Components\n// Styles\n\nimport { HorizontalScrollSectionClassName, HorizontalScrollSectionStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n// Begin Component\n// __________________________________________________________________________________________\n\nconst TallOuterContainer = styled.div.attrs(({\n  dynamicHeight\n}) => ({\n  style: {\n    height: `${dynamicHeight}px`\n  }\n})).withConfig({\n  displayName: \"HorizontalScrollSection__TallOuterContainer\",\n  componentId: \"sc-1rp22vz-0\"\n})([\"position:relative;width:100%;@media (max-width:\", \"){height:auto;}\"], Base.Media.Width.Sm + \"px\");\nconst Scrollbar = styled.span.attrs(({\n  dynamicBarWidth,\n  translateX\n}) => ({\n  style: {\n    width: `${dynamicBarWidth}px`,\n    transform: `translateX(${translateX}px) scaleY(1.5)`\n  }\n})).withConfig({\n  displayName: \"HorizontalScrollSection__Scrollbar\",\n  componentId: \"sc-1rp22vz-1\"\n})([\"height:var(--scrollBarHeight);;background:\", \";transform-origin:left center;display:block;@media (max-width:\", \"){width:auto;transform:none;}\"], Theme.Color.varForeground, Base.Media.Width.Sm + \"px\");\nconst ScrollbarContainer = styled.span.attrs(({\n  dynamicBarContainerWidth\n}) => ({\n  style: {\n    transform: `scaleX(${dynamicBarContainerWidth})`\n  }\n})).withConfig({\n  displayName: \"HorizontalScrollSection__ScrollbarContainer\",\n  componentId: \"sc-1rp22vz-2\"\n})([\"--scrollBarHeight:2px;transform-origin:left center;left:\", \";position:fixed;right:0;z-index:999;bottom:calc(\", \" + \", \" - var(--scrollBarHeight));@media (max-width:\", \"){display:none;transform:none;}\"], Root.Grid.Gutter.Left, BottomNavMargin, BottomNavSize, Base.Media.Width.Sm + \"px\");\nconst StickyInnerContainer = styled.div.withConfig({\n  displayName: \"HorizontalScrollSection__StickyInnerContainer\",\n  componentId: \"sc-1rp22vz-3\"\n})([\"position:sticky;top:0;height:100vh;width:100%;overflow-x:hidden;@media (max-width:\", \"){position:relative;height:auto;overflow-x:auto;}\"], Base.Media.Width.Sm + \"px\");\nconst HorizontalTranslateContainer = styled.div.attrs(({\n  translateX\n}) => ({\n  style: {\n    transform: `translateX(${translateX}px)`\n  }\n})).withConfig({\n  displayName: \"HorizontalScrollSection__HorizontalTranslateContainer\",\n  componentId: \"sc-1rp22vz-4\"\n})([\"position:absolute;height:100%;transition:transform 0.5s ease-out;will-change:transform;@media (max-width:\", \"){position:relative;height:auto;will-change:none;transform:none;transition:none;}\"], Base.Media.Width.Sm + \"px\");\nconst ContentWrapper = styled.div.withConfig({\n  displayName: \"HorizontalScrollSection__ContentWrapper\",\n  componentId: \"sc-1rp22vz-5\"\n})([\"position:relative;height:100vh;padding:0;display:flex;flex-flow:row nowrap;justify-content:flex-start;align-items:center;@media (max-width:\", \"){height:auto;display:block;}\"], Base.Media.Width.Sm + \"px\");\nconst HorizontalSection = styled.section.withConfig({\n  displayName: \"HorizontalScrollSection__HorizontalSection\",\n  componentId: \"sc-1rp22vz-6\"\n})([\"position:relative;width:100%;min-height:100vh;@media (max-width:\", \"){min-height:none;}\"], Base.Media.Width.Sm + \"px\");\n\nconst calcDynamicHeight = objectWidth => {\n  const vw = window.innerWidth;\n  const vh = window.innerHeight;\n  return objectWidth - vw + vh; //+ 150;\n};\n\nconst calcWidthRatio = objectWidth => {\n  const vw = window.innerWidth;\n  const ratio = objectWidth / vw;\n  return ratio;\n};\n\nconst calcDynamicBarWidth = objectWidth => {\n  const ratio = calcWidthRatio(objectWidth);\n  return objectWidth < window.innerWidth ? 0 : window.innerWidth / ratio;\n};\n\nconst handleDynamicHeight = (ref, setDynamicHeight) => {\n  const objectWidth = ref && ref.current ? ref.current.scrollWidth : 0;\n  const dynamicHeight = calcDynamicHeight(objectWidth);\n  setDynamicHeight(dynamicHeight);\n};\n\nconst handleDynamicBarWidth = (ref, setDynamicBarWidth) => {\n  const objectWidth = ref && ref.current ? ref.current.scrollWidth : 0;\n  const dynamicBarWidth = calcDynamicBarWidth(objectWidth); // console.log(\"ratio\", dynamicBarWidth, ref);\n\n  setDynamicBarWidth(dynamicBarWidth);\n};\n\nconst handleDynamicBarContainerWidth = (ref, setDynamicBarContainerWidth) => {\n  const vw = window.innerWidth;\n  const gutterSpace = Base.Grid.Gutter.Lg.Left + Base.Grid.Gutter.Lg.Right;\n  const dynamicBarWidth = (vw - gutterSpace) / vw;\n  setDynamicBarContainerWidth(dynamicBarWidth < 1 ? dynamicBarWidth : 1);\n};\n\nconst applyScrollListener = (ref, setTranslateX, setBarTranslateX) => {\n  window.addEventListener(\"scroll\", () => {\n    const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0;\n    const barOffset = ref && ref.current ? offsetTop * -1 / (ref.current.firstChild.clientWidth / window.innerWidth) : 0;\n    setTranslateX(offsetTop);\n    setBarTranslateX(barOffset);\n  });\n};\n\nexport const HorizontalScrollSection = ({\n  addClass = \"\",\n  children,\n  hasTopbar = false,\n  forceFullWidth = false,\n  style = {}\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null);\n  const {\n    0: dynamicBarWidth,\n    1: setDynamicBarWidth\n  } = useState(null);\n  const {\n    0: dynamicBarContainerWidth,\n    1: setDynamicBarContainerWidth\n  } = useState(null);\n  const {\n    0: translateX,\n    1: setTranslateX\n  } = useState(0);\n  const {\n    0: translateBarX,\n    1: setBarTranslateX\n  } = useState(0);\n  const containerRef = useRef(null);\n  const objectRef = useRef(null);\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    handleDynamicBarWidth(objectRef, setDynamicBarWidth);\n    handleDynamicBarContainerWidth(objectRef, setDynamicBarContainerWidth);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    handleDynamicBarWidth(objectRef, setDynamicBarWidth);\n    handleDynamicBarContainerWidth(objectRef, setDynamicBarContainerWidth);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX, setBarTranslateX);\n  }, []);\n  return /*#__PURE__*/_jsxs(HorizontalScrollSectionStyle, {\n    style: style,\n    forceFullWidth: forceFullWidth,\n    className: `${HorizontalScrollSectionClassName} ${HorizontalScrollSectionClassName}--${hasTopbar ? \"has-topbar\" : \"\"} ${addClass && addClass}`,\n    children: [/*#__PURE__*/_jsx(TallOuterContainer, {\n      dynamicHeight: dynamicHeight,\n      children: /*#__PURE__*/_jsx(StickyInnerContainer, {\n        ref: containerRef,\n        children: /*#__PURE__*/_jsx(HorizontalTranslateContainer, {\n          translateX: translateX,\n          ref: objectRef,\n          children: /*#__PURE__*/_jsx(HorizontalSection, {\n            children: /*#__PURE__*/_jsx(ContentWrapper, {\n              className: `${HorizontalScrollSectionClassName}__content-wrapper`,\n              children: children\n            })\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(ScrollbarContainer, {\n      dynamicBarContainerWidth: dynamicBarContainerWidth,\n      children: /*#__PURE__*/_jsx(Scrollbar, {\n        dynamicBarWidth: dynamicBarWidth,\n        translateX: translateBarX\n      })\n    })]\n  });\n}; // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}