{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Core\nimport React, { useContext } from \"react\";\nimport { DefaultTheme } from \"../../constants/site/Settings\"; //import { __DEBUG__ } from \"../../constants/site/Settings\";\n\nimport { ColorContext } from \"../../constants/styles/Color\";\nimport { Theme } from \"../../constants/Theme\";\nimport { ThemeChangerStyle } from \"./styles.scss\";\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemeChangerWithHook\n * @author Peter Laxalt\n *\n */\nexport class ThemeChangerWithHook extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTheme: {\n        name: \"default\",\n        primary: Theme.Color.Primary,\n        secondary: Theme.Color.Secondary,\n        background: Theme.Color.Background,\n        foreground: Theme.Color.Text\n      }\n    };\n    this.setNewTheme = this.setNewTheme.bind(this);\n  }\n  /*\n  componentDidMount() {\n    if (typeof window) {\n      window.laxaltUniversalTheme = this.state.activeTheme;\n       let nextBodyElement = document.getElementById(\"__next\");\n       if (nextBodyElement) {\n        nextBodyElement.setAttribute(\"data-theme\", this.state.activeTheme.name);\n      }\n       // _________________________\n      // Change if dark mode detected\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.setNewTheme(this.state.availableThemes[0]); //TODO: change this to fig\n      }\n     //  __DEBUG__ && console.log(\"ðŸŽ¨ theme set\", window.laxaltUniversalTheme);\n    }\n  }\n  */\n\n\n  setNewTheme(theme) {\n    const {\n      setTheme\n    } = this.props;\n    this.setState({\n      activeTheme: theme\n    });\n\n    if (\"undefined\") {\n      window.laxaltUniversalTheme = theme;\n      let nextBodyElement = document.getElementById(\"__next\");\n\n      if (nextBodyElement) {\n        nextBodyElement.setAttribute(\"data-theme\", theme.name);\n      }\n    }\n\n    setTheme(theme);\n  }\n\n  render() {\n    let {\n      children,\n      theme\n    } = this.props;\n    let {\n      activeTheme\n    } = this.state; // const SetGlobalTheme = createGlobalStyle`\n    //   ${\n    //     activeTheme\n    //       ? CssUtils.CreateTheme(\n    //           activeTheme.primary,\n    //           activeTheme.secondary,\n    //           activeTheme.background,\n    //           activeTheme.foreground\n    //         )\n    //       : \"\"\n    //   }\n    // `;\n\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(ThemeChangerStyle, {\n        onMouseOver: () => this.setNewTheme(theme),\n        onMouseLeave: () => this.setNewTheme(DefaultTheme),\n        className: \"\"\n        /*`${ThemeChangerClassName}`*/\n        ,\n        children: children\n      })\n    });\n  }\n\n}\nexport const ThemeChanger = ({\n  theme,\n  children\n}) => {\n  const {\n    setTheme\n  } = useContext(ColorContext);\n  return /*#__PURE__*/_jsx(ThemeChangerWithHook, {\n    theme: theme,\n    setTheme: setTheme,\n    children: children\n  });\n};","map":null,"metadata":{},"sourceType":"module"}