{"ast":null,"code":"/**\n *\n * CircleText.js/styles.scss.tsx\n * @author Alisha Garric\n * @description The website CircleText Styles. To be used in horizontal loop\n *\n */\n// Imports\n//////////////////////////////////////////////////////////////////////\n// Core\nimport styled from \"styled-components\";\nimport { rotating } from \"../../../constants/styles/Animation\";\nimport { Base } from \"../../../constants/styles/Base\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { GridColumnClassName } from \"../GridColumn/styles.scss\"; // Constants\n// Helpers\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport var CircleTextClassName = \"circle-text\";\nexport var CircleTextStyle = styled.svg.withConfig({\n  displayName: \"stylesscss__CircleTextStyle\",\n  componentId: \"sc-1284bc-0\"\n})([\"&.\", \"{height:\", \";width:\", \";fill:transparent;position:absolute;top:calc(50% + calc(\", \" / -2));left:calc(\", \" / -2);overflow:visible;-webkit-animation:\", \" 15s linear infinite;-moz-animation:\", \" 15s linear infinite;-ms-animation:\", \" 15s linear infinite;-o-animation:\", \" 15s linear infinite;animation:\", \" 15s linear infinite;mix-blend-mode:overlay;text{fill:\", \";font-size:30px;text-transform:uppercase;font-weight:600;}@media (max-width:\", \"){top:calc(\", \" / -2);left:calc(50% + calc(\", \" / -2));}}+ section.\", \"{margin-left:0;}\"], CircleTextClassName, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, rotating, rotating, rotating, rotating, rotating, Theme.Color.varForeground, Base.Media.Width.Sm + \"px\", function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, GridColumnClassName);","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/components/Sections/CircleText/styles.scss.tsx"],"names":["styled","rotating","Base","Theme","GridColumnClassName","CircleTextClassName","CircleTextStyle","svg","props","diameter","Color","varForeground","Media","Width","Sm"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA,OAAOA,MAAP,MAAkC,mBAAlC;AAEA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,mBAAT,QAAoC,2BAApC,C,CAEA;AAEA;AAEA;AACA;;AAEA,OAAO,IAAMC,mBAAmB,gBAAzB;AAEP,OAAO,IAAMC,eAAe,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,+hBAGtBF,mBAHsB,EAId,UAACG,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CAJc,EAKf,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CALe,EAQD,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CARC,EASX,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CATW,EAWHR,QAXG,EAYNA,QAZM,EAaPA,QAbO,EAcRA,QAdQ,EAeXA,QAfW,EAmBdE,KAAK,CAACO,KAAN,CAAYC,aAnBE,EAyBHT,IAAI,CAACU,KAAL,CAAWC,KAAX,CAAiBC,EAAjB,GAAsB,IAzBnB,EA0BV,UAACN,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CA1BU,EA2BE,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAjB;AAAA,CA3BF,EAiCdL,mBAjCc,CAArB","sourcesContent":["/**\n *\n * CircleText.js/styles.scss.tsx\n * @author Alisha Garric\n * @description The website CircleText Styles. To be used in horizontal loop\n *\n */\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { keyframes } from \"styled-components\";\nimport { Root } from \"../../../constants/Root\";\nimport { rotating } from \"../../../constants/styles/Animation\";\nimport { Base } from \"../../../constants/styles/Base\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { GridColumnClassName } from \"../GridColumn/styles.scss\";\n\n// Constants\n\n// Helpers\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const CircleTextClassName = `circle-text`;\n\nexport const CircleTextStyle = styled.svg<{\n  diameter: string;\n}>`\n  &.${CircleTextClassName} {\n    height: ${(props) => props.diameter};\n    width: ${(props) => props.diameter};\n    fill: transparent;\n    position: absolute;\n    top: calc(50% + calc(${(props) => props.diameter} / -2));\n    left: calc(${(props) => props.diameter} / -2);\n    overflow: visible;\n    -webkit-animation: ${rotating} 15s linear infinite;\n    -moz-animation: ${rotating} 15s linear infinite;\n    -ms-animation: ${rotating} 15s linear infinite;\n    -o-animation: ${rotating} 15s linear infinite;\n    animation: ${rotating} 15s linear infinite;\n    mix-blend-mode: overlay;\n    \n    text {\n      fill: ${Theme.Color.varForeground};\n      font-size: 30px;\n      text-transform: uppercase;\n      font-weight: 600;\n    }\n\n    @media (max-width: ${Base.Media.Width.Sm + \"px\"}) {\n      top: calc(${(props) => props.diameter} / -2);\n      left: calc(50% + calc(${(props) => props.diameter} / -2));\n    }\n  }\n\n\n  //Section kerning\n  + section.${GridColumnClassName} {\n    margin-left: 0;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}