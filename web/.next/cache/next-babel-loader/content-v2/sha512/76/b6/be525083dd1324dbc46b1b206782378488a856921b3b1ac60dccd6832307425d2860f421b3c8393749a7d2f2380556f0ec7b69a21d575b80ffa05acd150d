{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/side-projects/solas/web/components/Sections/InteractiveCards/InteractiveCards.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Core\nimport React from \"react\";\nimport { Inner } from \"../../Inner\";\nimport { Bird } from \"../../_svg/Birds/Bird\";\nimport { CircleDecor } from \"../../_svg/CircleDecor/CircleDecor\";\nimport { Anchor } from \"../Anchor\";\nimport { Button } from \"../Button\"; // Styles\n\nimport { InteractiveCardsClassName, InteractiveCardsStyle } from \"./styles.scss\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveCards\n * @author Alisha Garric\n * @requires /studio/sections/InteractiveCards\n *\n */\nexport var InteractiveCards = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(InteractiveCards, _React$PureComponent);\n\n  var _super = _createSuper(InteractiveCards);\n\n  function InteractiveCards(props) {\n    var _this;\n\n    _classCallCheck(this, InteractiveCards);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeSet: 0,\n      flippedCard: -1\n    };\n    _this.updateActiveSet = _this.updateActiveSet.bind(_assertThisInitialized(_this));\n    _this.updateFlippedCard = _this.updateFlippedCard.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InteractiveCards, [{\n    key: \"updateActiveSet\",\n    value: function updateActiveSet(index) {\n      this.setState({\n        activeSet: index\n      });\n    }\n  }, {\n    key: \"updateFlippedCard\",\n    value: function updateFlippedCard(index) {\n      if (this.state.flippedCard == index) {\n        this.setState({\n          flippedCard: -1\n        });\n      } else {\n        this.setState({\n          flippedCard: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          cta = _this$props.cta,\n          card_sets = _this$props.card_sets,\n          headline = _this$props.headline;\n      return /*#__PURE__*/_jsxDEV(InteractiveCardsStyle, {\n        className: \"\".concat(InteractiveCardsClassName),\n        children: [/*#__PURE__*/_jsxDEV(Anchor, {\n          id: \"how\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Inner, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(InteractiveCardsClassName, \"__content\"),\n            children: [/*#__PURE__*/_jsxDEV(Bird, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CircleDecor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"\".concat(InteractiveCardsClassName, \"__headline h3\"),\n              children: headline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\".concat(InteractiveCardsClassName, \"__header\"),\n              children: [card_sets && card_sets.length > 0 && /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"\".concat(InteractiveCardsClassName, \"__header__card-sets-nav\"),\n                children: card_sets.map(function (set, idx) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"\".concat(InteractiveCardsClassName, \"__header__card-sets-nav__item \").concat(_this2.state.activeSet == idx ? \"__active\" : \"\"),\n                    onClick: function onClick() {\n                      return _this2.updateActiveSet(idx);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      label: set.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, _this2)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, _this2);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), cta && /*#__PURE__*/_jsxDEV(Button, {\n                link: cta.link,\n                label: cta.label,\n                target: cta.target,\n                download: cta.download\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), card_sets && card_sets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\".concat(InteractiveCardsClassName, \"__card-sets\"),\n              children: card_sets.map(function (set, idx) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"\".concat(InteractiveCardsClassName, \"__card-sets__cards \").concat(_this2.state.activeSet == idx ? \"__active\" : \"\"),\n                  children: set.cards && set.cards.length > 0 && set.cards.map(function (card, idxx) {\n                    var specialKey = (idxx + 1) * (idx + 1);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"\".concat(InteractiveCardsClassName, \"__card\"),\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"\".concat(InteractiveCardsClassName, \"__card__inner \").concat(_this2.state.flippedCard == specialKey ? \"__active\" : \"\"),\n                        onClick: function onClick() {\n                          return _this2.updateFlippedCard(specialKey);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\".concat(InteractiveCardsClassName, \"__card__inner__label\"),\n                          children: \"Step\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 31\n                        }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\".concat(InteractiveCardsClassName, \"__card__inner__index headline\"),\n                          children: idxx\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 31\n                        }, _this2), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"\".concat(InteractiveCardsClassName, \"__card__inner__front\"),\n                          children: card.front_text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 127,\n                          columnNumber: 31\n                        }, _this2), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"\".concat(InteractiveCardsClassName, \"__card__inner__back\"),\n                          children: card.back_text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 31\n                        }, _this2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 29\n                      }, _this2)\n                    }, specialKey, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, _this2);\n                  })\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), cta && /*#__PURE__*/_jsxDEV(Button, {\n              link: cta.link,\n              label: cta.label,\n              target: cta.target,\n              download: cta.download\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return InteractiveCards;\n}(React.PureComponent);\n; // End Component\n// __________________________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/side-projects/solas/web/components/Sections/InteractiveCards/InteractiveCards.tsx"],"names":["React","Inner","Bird","CircleDecor","Anchor","Button","InteractiveCardsClassName","InteractiveCardsStyle","InteractiveCards","props","state","activeSet","flippedCard","updateActiveSet","bind","updateFlippedCard","index","setState","cta","card_sets","headline","length","map","set","idx","label","link","target","download","cards","card","idxx","specialKey","front_text","back_text","PureComponent"],"mappings":"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","sourcesContent":["// Core\nimport React from \"react\";\nimport { Inner } from \"../../Inner\";\nimport { Bird } from \"../../_svg/Birds/Bird\";\nimport { CircleDecor } from \"../../_svg/CircleDecor/CircleDecor\";\nimport { Anchor } from \"../Anchor\";\nimport { Button, LMNTS_Section_Button } from \"../Button\";\n\n// Styles\nimport {\n  InteractiveCardsClassName,\n  InteractiveCardsStyle,\n} from \"./styles.scss\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport type LMNTS_Section_InteractiveCards = {\n  headline?: string;\n  cta?: LMNTS_Section_Button;\n  card_sets: {\n    label: string;\n    cards: {\n      front_text: string;\n      back_text: string;\n    }[];\n  }[];\n};\n\nexport type InteractiveCardsState = {\n  activeSet: number;\n  flippedCard: number;\n }\n\n/**\n *\n * @name InteractiveCards\n * @author Alisha Garric\n * @requires /studio/sections/InteractiveCards\n *\n */\n export class InteractiveCards extends React.PureComponent<\n LMNTS_Section_InteractiveCards,\n InteractiveCardsState\n> {\n constructor(props: LMNTS_Section_InteractiveCards) {\n    super(props);\n\n    this.state = {\n      activeSet: 0,\n      flippedCard: -1,\n    };\n\n    this.updateActiveSet = this.updateActiveSet.bind(this);\n    this.updateFlippedCard = this.updateFlippedCard.bind(this);\n }\n\n\n  updateActiveSet( index: number ) {\n    this.setState({\n      activeSet: index,\n    });\n  }\n\n  updateFlippedCard( index: number) {\n    if (this.state.flippedCard == index ){\n      this.setState({\n        flippedCard: -1,\n      });\n    } else {\n      this.setState({\n        flippedCard: index,\n      });\n    }\n  }\n\n\n  render() {\n\n    let { cta, card_sets, headline} = this.props;\n    return (\n      <InteractiveCardsStyle className={`${InteractiveCardsClassName}`}>\n        <Anchor id=\"how\" />\n        <Inner>\n          <div className={`${InteractiveCardsClassName}__content`}>\n            <Bird />\n            <CircleDecor />\n            <h2 className={`${InteractiveCardsClassName}__headline h3`}>{headline}</h2>\n\n            <div className={`${InteractiveCardsClassName}__header`}>\n              {card_sets && card_sets.length > 0 &&\n                <nav className={`${InteractiveCardsClassName}__header__card-sets-nav`}>\n                  {card_sets.map((set, idx) => {\n                    return (\n                      <div \n                        key={idx} \n                        className={`${InteractiveCardsClassName}__header__card-sets-nav__item ${this.state.activeSet == idx ? \"__active\" : \"\"}`}\n                        onClick={() => this.updateActiveSet(idx)}\n                      >\n                        <Button label={set.label} />\n                      </div>\n                    );\n                  })}\n                </nav>\n              }\n              {cta &&\n                <Button link={cta.link} label={cta.label} target={cta.target} download={cta.download}/>\n              }\n            </div>\n\n            {card_sets && card_sets.length > 0 &&\n              <div className={`${InteractiveCardsClassName}__card-sets`}>\n                {card_sets.map((set, idx) => {\n                  return (\n                    <div key={idx} className={`${InteractiveCardsClassName}__card-sets__cards ${this.state.activeSet == idx ? \"__active\" : \"\"}`}>\n                      {set.cards && set.cards.length > 0 && set.cards.map((card, idxx) => {\n                        let specialKey = (idxx + 1) * (idx + 1);\n\n                        return (\n                          <div key={specialKey} className={`${InteractiveCardsClassName}__card`}>\n                            <div \n                              className={`${InteractiveCardsClassName}__card__inner ${this.state.flippedCard == specialKey ? \"__active\" : \"\"}`}\n                              onClick={() => this.updateFlippedCard(specialKey)}\n                            >\n                              <div className={`${InteractiveCardsClassName}__card__inner__label`}>Step</div>\n                              <div className={`${InteractiveCardsClassName}__card__inner__index headline`}>{idxx}</div>\n                              <p className={`${InteractiveCardsClassName}__card__inner__front`}>{card.front_text}</p>\n                              <p className={`${InteractiveCardsClassName}__card__inner__back`}>{card.back_text}</p>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            }\n            {cta &&\n              <Button link={cta.link} label={cta.label} target={cta.target} download={cta.download}/>\n            }\n          </div>\n        </Inner>\n      </InteractiveCardsStyle>\n    );\n  }\n};\n\n// End Component\n// __________________________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}