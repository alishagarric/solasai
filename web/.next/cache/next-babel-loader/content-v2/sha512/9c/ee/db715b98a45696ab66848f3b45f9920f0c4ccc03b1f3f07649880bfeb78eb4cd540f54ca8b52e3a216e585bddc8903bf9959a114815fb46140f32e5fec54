{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/react/volume/web/components/Sections/CircleText/CircleText.tsx\";\n// Core\nimport React from \"react\";\n// Styles\nimport { CircleTextClassName, CircleTextStyle } from \"./styles.scss\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name CircleText\n * @author Alisha Garric\n * @requires /studio/sections/CircleText\n *\n */\nexport const CircleText = ({\n  text,\n  diameter\n}) => {\n  return /*#__PURE__*/_jsxDEV(CircleTextStyle, {\n    className: `${CircleTextClassName}`,\n    diameter: `${diameter}px`,\n    viewBox: `0 0 ${diameter} ${diameter}`,\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: \"curve\",\n      d: `\n              M 0, ${diameter / 2}\n              a ${diameter / 2},${diameter / 2} 0 1,1 ${diameter},0\n              a ${diameter / 2},${diameter / 2} 0 1,1 -${diameter},0\n              `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      width: diameter,\n      children: /*#__PURE__*/_jsxDEV(\"textPath\", {\n        alignmentBaseline: \"baseline\",\n        xlinkHref: \"#curve\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}; // End Component\n// __________________________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/components/Sections/CircleText/CircleText.tsx"],"names":["React","CircleTextClassName","CircleTextStyle","CircleText","text","diameter"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAmD,OAAnD;AASA;AACA,SACEC,mBADF,EAEEC,eAFF,QAGO,eAHP,C,CAKA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAA6D,GAAG,CAAC;AAC5EC,EAAAA,IAD4E;AAE5EC,EAAAA;AAF4E,CAAD,KAGvE;AAEJ,sBACE,QAAC,eAAD;AACE,IAAA,SAAS,EAAG,GAAEJ,mBAAoB,EADpC;AAEE,IAAA,QAAQ,EAAG,GAAEI,QAAS,IAFxB;AAGE,IAAA,OAAO,EAAG,OAAMA,QAAS,IAAGA,QAAS,EAHvC;AAAA,4BAMM;AAAM,MAAA,EAAE,EAAC,OAAT;AACE,MAAA,CAAC,EAAG;AAChB,qBAAqBA,QAAQ,GAAG,CAAE;AAClC,kBAAkBA,QAAQ,GAAG,CAAE,IAAGA,QAAQ,GAAG,CAAE,UAASA,QAAS;AACjE,kBAAkBA,QAAQ,GAAG,CAAE,IAAGA,QAAQ,GAAG,CAAE,WAAUA,QAAS;AAClE;AALU;AAAA;AAAA;AAAA;AAAA,YANN,eAYI;AAAM,MAAA,KAAK,EAAEA,QAAb;AAAA,6BACE;AAAU,QAAA,iBAAiB,EAAC,UAA5B;AAAuC,QAAA,SAAS,EAAC,QAAjD;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAzBM,C,CA2BP;AACA","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport React, { Children, useEffect, useRef } from \"react\";\nimport {\n  LMNTS_SiteVolume,\n  SiteVolumes,\n} from \"../../../constants/site/Settings\";\nimport LazyImage from \"../../../utils/lazyImage\";\nimport { Brandmark } from \"../../_svg/Brandmark/Brandmark\";\nimport { Logotype } from \"../../_svg/Logotype/Logotype\";\n\n// Styles\nimport {\n  CircleTextClassName,\n  CircleTextStyle,\n} from \"./styles.scss\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport type LMNTS_Section_CircleText = {\n  text: string\n  diameter: number; //in pixels\n};\n\n/**\n *\n * @name CircleText\n * @author Alisha Garric\n * @requires /studio/sections/CircleText\n *\n */\nexport const CircleText: React.FunctionComponent<LMNTS_Section_CircleText> = ({\n  text,\n  diameter\n}) => {\n\n  return (\n    <CircleTextStyle\n      className={`${CircleTextClassName}`}\n      diameter={`${diameter}px`}\n      viewBox={`0 0 ${diameter} ${diameter}`}\n    >\n\n          <path id=\"curve\"\n            d={`\n              M 0, ${diameter / 2}\n              a ${diameter / 2},${diameter / 2} 0 1,1 ${diameter},0\n              a ${diameter / 2},${diameter / 2} 0 1,1 -${diameter},0\n              `}/>\n        <text width={diameter}>\n          <textPath alignmentBaseline=\"baseline\" xlinkHref=\"#curve\">\n            {text}\n          </textPath>\n        </text>\n    </CircleTextStyle>\n  );\n};\n\n// End Component\n// __________________________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}