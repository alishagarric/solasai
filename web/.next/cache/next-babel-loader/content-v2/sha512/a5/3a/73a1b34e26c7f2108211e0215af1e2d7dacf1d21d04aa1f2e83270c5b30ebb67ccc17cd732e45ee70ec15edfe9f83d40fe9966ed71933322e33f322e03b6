{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/react/volume/web/components/AccordionsListing/AccordionsListing.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { AccordionsListingClassName, AccordionsListingStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionsListing\n * @author Alisha Garric\n *\n */\nexport class AccordionsListing extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"accordionsRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      openAccordion: -1\n    };\n    this.updateOpenAccordion = this.updateOpenAccordion.bind(this);\n  }\n\n  updateOpenAccordion(index) {\n    let accordionsContainer = this.accordionsRef && this.accordionsRef.current && this.accordionsRef.current.closest(\"ul\"); //  console.log(accordionsContainer.children[index]);\n\n    if (accordionsContainer) {\n      //if open accordion is clicked, close all\n      if (index == this.state.openAccordion) {\n        accordionsContainer.children[index].classList.remove(\"__is-open\");\n        this.setState({\n          openAccordion: -1\n        });\n      } // if closed accordion is clicked, open it\n      else {\n          this.state.openAccordion != -1 && accordionsContainer.children[this.state.openAccordion].classList.remove(\"__is-open\");\n          this.setState({\n            openAccordion: index\n          }); // console.log(accordionsContainer.children[index]);\n\n          accordionsContainer.children[index].classList.add(\"__is-open\"); //  console.log(this.accordionsRef.current.closest(\"ul\"));\n        }\n    }\n  }\n\n  render() {\n    let {\n      listings,\n      addClass\n    } = this.props;\n    return listings.map((listing, idx) => {\n      return /*#__PURE__*/_jsxDEV(AccordionsListingStyle, {\n        className: `${addClass ? addClass + \"__menu-nav__list__item\" : \"\"} ${AccordionsListingClassName}__menu-nav__list__item`,\n        onClick: () => this.updateOpenAccordion(idx),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: listing.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${AccordionsListingClassName}__accordion`,\n          ref: this.accordionsRef,\n          children: [listing.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${AccordionsListingClassName}__accordion__text-container`,\n            children: listing.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), listing.images.length > 0 && listing.images.map((image, idxx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${AccordionsListingClassName}__accordion__image-container`,\n              children: /*#__PURE__*/_jsxDEV(LazyImage, {\n                src: image.image,\n                alt: \"Volume Industries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this)\n            }, idxx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n} // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/components/AccordionsListing/AccordionsListing.tsx"],"names":["React","createRef","PureComponent","AccordionsListingClassName","AccordionsListingStyle","LazyImage","AccordionsListing","constructor","props","state","openAccordion","updateOpenAccordion","bind","index","accordionsContainer","accordionsRef","current","closest","children","classList","remove","setState","add","render","listings","addClass","map","listing","idx","name","description","images","length","image","idxx"],"mappings":"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","sourcesContent":["// Core\nimport React, { createRef, PureComponent } from \"react\";\n\n// Styles\nimport { AccordionsListingClassName, AccordionsListingStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\nimport { CSSProperties } from \"styled-components\";\nimport { LMNTS_SiteIndustry } from \"../../constants/site/Settings\";\nimport { NavigationClassName } from \"../Navigation/styles.scss\";\nimport { Accordion } from \"../Accordion\";\nimport { throws } from \"assert\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LMNTS_AccordionsListing = {\n  listings: LMNTS_SiteIndustry[];\n  addClass?: string;\n};\n\nexport type LMNTS_AccordionsListing_State = {\n  openAccordion: number;\n}\n\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionsListing\n * @author Alisha Garric\n *\n */\n\n\nexport class AccordionsListing extends PureComponent<\n  LMNTS_AccordionsListing,\n  LMNTS_AccordionsListing_State\n> {\n\n  constructor(props: LMNTS_AccordionsListing) {\n    super(props);\n\n    this.state = {\n      openAccordion: -1,\n    };\n\n    this.updateOpenAccordion = this.updateOpenAccordion.bind(this);\n  }\n\n  updateOpenAccordion(index: number) {\n    let accordionsContainer = this.accordionsRef && this.accordionsRef.current && this.accordionsRef.current.closest(\"ul\");\n  //  console.log(accordionsContainer.children[index]);\n\n    if (accordionsContainer){\n\n      //if open accordion is clicked, close all\n      if ( index == this.state.openAccordion ) {\n        accordionsContainer.children[index].classList.remove(\"__is-open\");\n        this.setState({openAccordion: -1});\n      }\n      // if closed accordion is clicked, open it\n      else {\n        this.state.openAccordion != -1 && accordionsContainer.children[this.state.openAccordion].classList.remove(\"__is-open\");\n        this.setState({openAccordion: index});\n       // console.log(accordionsContainer.children[index]);\n        accordionsContainer.children[index].classList.add(\"__is-open\");\n      //  console.log(this.accordionsRef.current.closest(\"ul\"));\n      }\n    }\n  }\n\n  accordionsRef: React.RefObject<HTMLDivElement> = createRef<HTMLDivElement>();\n\n  render() {\n    \n\n    let { listings, addClass } = this.props;\n    return (\n      listings.map((listing: LMNTS_SiteIndustry, idx: number) => {\n        return (\n        <AccordionsListingStyle\n          key={idx}\n          className={`${addClass ? addClass + \"__menu-nav__list__item\" : \"\"} ${AccordionsListingClassName}__menu-nav__list__item`}\n          onClick={() => this.updateOpenAccordion(idx)}\n          \n        >\n            <h2>{listing.name}</h2>\n            <div className={`${AccordionsListingClassName}__accordion`} ref={this.accordionsRef}>\n    \n              { listing.description && \n                <p className={`${AccordionsListingClassName}__accordion__text-container`}>\n                  {listing.description}\n                </p>\n              }\n    \n              {listing.images.length > 0 &&\n                listing.images.map((image, idxx: number) => {\n                  return (\n                    <div className={`${AccordionsListingClassName}__accordion__image-container`} key={idxx}>\n                      <LazyImage\n                        src={image.image}\n                        alt={\"Volume Industries\"}\n                      />\n                    </div>\n                  );\n                })\n              }\n          </div>\n        </AccordionsListingStyle>\n        );\n      })\n    );\n  }\n}\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}