{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { AccordionsListingClassName, AccordionsListingStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\nimport { NavigationClassName } from \"../Navigation/styles.scss\";\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionsListing\n * @author Alisha Garric\n *\n */\nexport class AccordionsListing extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"accordionsRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      openAccordion: 0,\n      openState: this.props.openState\n    };\n    this.updateOpenAccordion = this.updateOpenAccordion.bind(this);\n  }\n\n  updateOpenAccordion(index) {\n    let accordionsContainer = this.accordionsRef && this.accordionsRef.current && this.accordionsRef.current.closest(\"ul\");\n\n    if (accordionsContainer) {\n      //if open accordion is clicked, close all\n      if (index == this.state.openAccordion) {\n        accordionsContainer.children[index].classList.remove(\"__is-open\");\n        this.setState({\n          openAccordion: 0\n        });\n      } // if closed accordion is clicked, open it\n      else {\n          accordionsContainer.children[this.state.openAccordion].classList.remove(\"__is-open\");\n          this.setState({\n            openAccordion: index\n          });\n          accordionsContainer.children[index].classList.add(\"__is-open\");\n        }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.openState == false && this.state.openAccordion != 0) {\n      this.updateOpenAccordion(this.state.openAccordion);\n    }\n  }\n\n  render() {\n    let {\n      listings\n    } = this.props;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"li\", {\n        onClick: () => this.updateOpenAccordion(0),\n        className: `${AccordionsListingClassName}__menu-nav__list__intro ${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__intro ${NavigationClassName}__menu-nav__list__item __is-open`,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Qquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        })\n      }, 0), listings.map((listing, idx) => {\n        return /*#__PURE__*/_jsxs(AccordionsListingStyle, {\n          className: `${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__item`,\n          onClick: () => this.updateOpenAccordion(idx + 1),\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            children: listing.name\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: `${AccordionsListingClassName}__accordion`,\n            ref: this.accordionsRef,\n            children: [listing.description && /*#__PURE__*/_jsx(\"p\", {\n              className: `${AccordionsListingClassName}__accordion__text-container`,\n              children: listing.description\n            }), listing.images.length > 0 && listing.images.map((image, idxx) => {\n              return /*#__PURE__*/_jsx(\"div\", {\n                className: `${AccordionsListingClassName}__accordion__image-container`,\n                children: /*#__PURE__*/_jsx(LazyImage, {\n                  src: image.image,\n                  alt: \"Volume Industries\"\n                })\n              }, idxx);\n            })]\n          })]\n        }, idx + 1);\n      })]\n    });\n  }\n\n} // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}