{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/side-projects/solas/web/components/ThemeChanger/ThemeChanger.tsx\";\n// Core\nimport React from \"react\"; //import { __DEBUG__ } from \"../../constants/site/Settings\";\n\nimport { ColorUtils } from \"../../constants/styles/Color\";\n// Begin Component\n// __________________________________________________________________________________________\n\n/*\n  const { setTheme } = this.props;\n\n  this.setState({\n    activeTheme: theme,\n  });\n\n  if (typeof window) {\n    window.laxaltUniversalTheme = theme;\n\n    let nextBodyElement = document.getElementById(\"__next\");\n\n    if (nextBodyElement) {\n      nextBodyElement.setAttribute(\"data-theme\", theme.name);\n    }\n  }\n\n  const SecondTheme = ColorUtils.SetThemeFromServer(OysterTheme);\n*/\nexport class ThemeChanger extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n    this.removeTheme = this.removeTheme.bind(this);\n    this.addTheme = this.addTheme.bind(this);\n  }\n\n  removeTheme() {\n    this.setState({\n      active: false\n    });\n  }\n\n  addTheme() {\n    this.setState({\n      active: true\n    });\n  }\n\n  render() {\n    let {\n      children,\n      theme,\n      className\n    } = this.props;\n    let {\n      active\n    } = this.state;\n    let HoverTheme = ColorUtils.SetThemeFromServer(theme);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onMouseOver: () => this.addTheme(),\n      onMouseLeave: () => this.removeTheme(),\n      className: `${className ? className : \"\"}`,\n      children: [active && /*#__PURE__*/_jsxDEV(HoverTheme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/alishagarric/Projects/side-projects/solas/web/components/ThemeChanger/ThemeChanger.tsx"],"names":["React","ColorUtils","ThemeChanger","PureComponent","constructor","props","state","active","removeTheme","bind","addTheme","setState","render","children","theme","className","HoverTheme","SetThemeFromServer"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA4C,8BAA5C;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,YAAN,SAA2BF,KAAK,CAACG,aAAjC,CAGL;AACAC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AACpC,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKG,QAAL,CAAc;AACZJ,MAAAA,MAAM,EAAE;AADI,KAAd;AAGD;;AAEDG,EAAAA,QAAQ,GAAG;AACT,SAAKC,QAAL,CAAc;AACZJ,MAAAA,MAAM,EAAE;AADI,KAAd;AAGD;;AAIDK,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAAiC,KAAKV,KAA1C;AACA,QAAI;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAvB;AACA,QAAIU,UAAU,GAAGf,UAAU,CAACgB,kBAAX,CAA8BH,KAA9B,CAAjB;AAEA,wBACE;AACE,MAAA,WAAW,EAAE,MAAM,KAAKJ,QAAL,EADrB;AAEE,MAAA,YAAY,EAAE,MAAM,KAAKF,WAAL,EAFtB;AAGE,MAAA,SAAS,EAAG,GAAEO,SAAS,GAAGA,SAAH,GAAe,EAAG,EAH3C;AAAA,iBAKIR,MAAM,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cALd,EAMGM,QANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzCD;AA0CD","sourcesContent":["// Core\nimport React from \"react\";\n//import { __DEBUG__ } from \"../../constants/site/Settings\";\nimport { ColorUtils, LXLT_ColorTheme } from \"../../constants/styles/Color\";\n\ndeclare global {\n  interface Window {\n    laxaltUniversalTheme: LXLT_ColorTheme;\n  }\n}\n\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_ThemeChanger = {\n  theme: LXLT_ColorTheme;\n  className?: string;\n};\n\ntype LXLT_ThemeChangerState = {\n  active: boolean;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/*\n  const { setTheme } = this.props;\n\n  this.setState({\n    activeTheme: theme,\n  });\n\n  if (typeof window) {\n    window.laxaltUniversalTheme = theme;\n\n    let nextBodyElement = document.getElementById(\"__next\");\n\n    if (nextBodyElement) {\n      nextBodyElement.setAttribute(\"data-theme\", theme.name);\n    }\n  }\n\n  const SecondTheme = ColorUtils.SetThemeFromServer(OysterTheme);\n*/\n\nexport class ThemeChanger extends React.PureComponent<\n  LXLT_ThemeChanger,\n  LXLT_ThemeChangerState\n> {\n  constructor(props: LXLT_ThemeChanger) {\n    super(props);\n\n    this.state = {\n      active: false,\n    };\n\n    this.removeTheme = this.removeTheme.bind(this);\n    this.addTheme = this.addTheme.bind(this);\n  }\n\n  removeTheme() {\n    this.setState({\n      active: false,\n    });\n  }\n\n  addTheme() {\n    this.setState({\n      active: true,\n    });\n  }\n\n\n\n  render() {\n    let { children, theme, className } = this.props;\n    let { active  } = this.state;\n    let HoverTheme = ColorUtils.SetThemeFromServer(theme);\n\n    return (\n      <li           \n        onMouseOver={() => this.addTheme()} \n        onMouseLeave={() => this.removeTheme()} \n        className={`${className ? className : \"\"}`}\n      >\n        { active && <HoverTheme />}\n        {children}\n      </li>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}