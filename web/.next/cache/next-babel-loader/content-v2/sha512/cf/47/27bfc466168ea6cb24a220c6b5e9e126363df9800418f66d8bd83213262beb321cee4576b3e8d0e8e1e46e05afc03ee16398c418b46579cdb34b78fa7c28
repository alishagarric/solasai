{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Core\nimport React from \"react\"; //import { __DEBUG__ } from \"../../constants/site/Settings\";\n\nimport { ColorUtils } from \"../../constants/styles/Color\";\n// Begin Component\n// __________________________________________________________________________________________\n\n/*\n  const { setTheme } = this.props;\n\n  this.setState({\n    activeTheme: theme,\n  });\n\n  if (typeof window) {\n    window.laxaltUniversalTheme = theme;\n\n    let nextBodyElement = document.getElementById(\"__next\");\n\n    if (nextBodyElement) {\n      nextBodyElement.setAttribute(\"data-theme\", theme.name);\n    }\n  }\n\n  const SecondTheme = ColorUtils.SetThemeFromServer(OysterTheme);\n*/\nexport var ThemeChanger = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ThemeChanger, _React$PureComponent);\n\n  var _super = _createSuper(ThemeChanger);\n\n  function ThemeChanger(props) {\n    var _this;\n\n    _classCallCheck(this, ThemeChanger);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      active: false\n    };\n    _this.removeTheme = _this.removeTheme.bind(_assertThisInitialized(_this));\n    _this.addTheme = _this.addTheme.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ThemeChanger, [{\n    key: \"removeTheme\",\n    value: function removeTheme() {\n      this.setState({\n        active: false\n      });\n    }\n  }, {\n    key: \"addTheme\",\n    value: function addTheme() {\n      this.setState({\n        active: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme;\n      var active = this.state.active;\n      var HoverTheme = ColorUtils.SetThemeFromServer(theme);\n      return /*#__PURE__*/_jsxs(\"div\", {\n        onMouseOver: function onMouseOver() {\n          return _this2.addTheme();\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.removeTheme();\n        },\n        children: [active && /*#__PURE__*/_jsx(HoverTheme, {}), children]\n      });\n    }\n  }]);\n\n  return ThemeChanger;\n}(React.PureComponent);\n;","map":null,"metadata":{},"sourceType":"module"}