{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/alishagarric/Projects/side-projects/solas/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alishagarric/Projects/side-projects/solas/web/pages/_app.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// /pages/_app_.js\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorUtils } from \"../constants/styles/Color\";\nimport { DefaultTheme } from \"../constants/site/Settings\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * /pages/_app_.js\n * @author Alisha Garric\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      router = _ref.router;\n  var PageTheme = ColorUtils.SetThemeFromServer(DefaultTheme);\n  var thisPage = SitePages.concat(SiteVolumes).filter(function (page, index) {\n    return page.link == router.asPath;\n  });\n\n  if (router && router.asPath && thisPage.length > 0) {\n    PageTheme = ColorUtils.SetThemeFromServer(thisPage[0].theme);\n  } // Render our App\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTheme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/alishagarric/Projects/side-projects/solas/web/pages/_app.tsx"],"names":["React","Layout","ColorUtils","DefaultTheme","MyApp","Component","pageProps","router","PageTheme","SetThemeFromServer","thisPage","SitePages","concat","SiteVolumes","filter","page","index","link","asPath","length","theme"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2D;AAAA,MAAxDC,SAAwD,QAAxDA,SAAwD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AACvE,MAAIC,SAAS,GAAGN,UAAU,CAACO,kBAAX,CAA8BN,YAA9B,CAAhB;AACA,MAAIO,QAAQ,GAAGC,SAAS,CAACC,MAAV,CAAiBC,WAAjB,EAA8BC,MAA9B,CAAsC,UAACC,IAAD,EAAOC,KAAP;AAAA,WACnDD,IAAI,CAACE,IAAL,IAAaV,MAAM,CAACW,MAD+B;AAAA,GAAtC,CAAf;;AAIA,MAAIX,MAAM,IAAIA,MAAM,CAACW,MAAjB,IAA2BR,QAAQ,CAACS,MAAT,GAAkB,CAAjD,EAAoD;AAClDX,IAAAA,SAAS,GAAGN,UAAU,CAACO,kBAAX,CAA8BC,QAAQ,CAAC,CAAD,CAAR,CAAYU,KAA1C,CAAZ;AACD,GARsE,CAUvE;;;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD,kCAAYd,SAAZ;AAAA,6BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAQD,CAnBD;;KAAMF,K;AAqBN,eAAeA,KAAf","sourcesContent":["// /pages/_app_.js\nimport React from \"react\";\nimport { AppProps } from \"next/app\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorUtils } from \"../constants/styles/Color\";\nimport { DefaultTheme } from \"../constants/site/Settings\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_CustomAppData = AppProps & {};\n\n/**\n *\n * /pages/_app_.js\n * @author Alisha Garric\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\n\nconst MyApp = ({ Component, pageProps, router }: LMNTS_CustomAppData) => {\n  let PageTheme = ColorUtils.SetThemeFromServer(DefaultTheme);\n  let thisPage = SitePages.concat(SiteVolumes).filter( (page, index) =>\n    page.link == router.asPath\n  ); \n\n  if (router && router.asPath && thisPage.length > 0 ){\n    PageTheme = ColorUtils.SetThemeFromServer(thisPage[0].theme);\n  }\n\n  // Render our App\n  return (\n    <>\n      <PageTheme /> \n      <Layout {...pageProps}>\n        <Component {...pageProps} />\n      </Layout>\n    </>\n  );\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}