{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alishagarric/Projects/react/volume/web/components/AccordionsListing/AccordionsListing.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { AccordionsListingClassName, AccordionsListingStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\nimport { NavigationClassName } from \"../Navigation/styles.scss\";\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionsListing\n * @author Alisha Garric\n *\n */\nexport class AccordionsListing extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"accordionsRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      openAccordion: 0,\n      openState: this.props.openState\n    };\n    this.updateOpenAccordion = this.updateOpenAccordion.bind(this);\n  }\n\n  updateOpenAccordion(index) {\n    let accordionsContainer = this.accordionsRef && this.accordionsRef.current && this.accordionsRef.current.closest(\"ul\");\n\n    if (accordionsContainer) {\n      //if open accordion is clicked, close all\n      if (index == this.state.openAccordion) {\n        accordionsContainer.children[index].classList.remove(\"__is-open\");\n        this.setState({\n          openAccordion: 0\n        });\n      } // if closed accordion is clicked, open it\n      else {\n          accordionsContainer.children[this.state.openAccordion].classList.remove(\"__is-open\");\n          this.setState({\n            openAccordion: index\n          });\n          accordionsContainer.children[index].classList.add(\"__is-open\");\n        }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.openState == false && this.state.openAccordion != 0) {\n      console.log(\"here\");\n      this.updateOpenAccordion(this.state.openAccordion);\n    }\n  }\n\n  render() {\n    let {\n      listings\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.updateOpenAccordion(0),\n        className: `${AccordionsListingClassName}__menu-nav__list__intro ${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__intro ${NavigationClassName}__menu-nav__list__item __is-open`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Qquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), listings.map((listing, idx) => {\n        return /*#__PURE__*/_jsxDEV(AccordionsListingStyle, {\n          className: `${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__item`,\n          onClick: () => this.updateOpenAccordion(idx + 1),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: listing.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${AccordionsListingClassName}__accordion`,\n            ref: this.accordionsRef,\n            children: [listing.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${AccordionsListingClassName}__accordion__text-container`,\n              children: listing.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), listing.images.length > 0 && listing.images.map((image, idxx) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${AccordionsListingClassName}__accordion__image-container`,\n                children: /*#__PURE__*/_jsxDEV(LazyImage, {\n                  src: image.image,\n                  alt: \"Volume Industries\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this)\n              }, idxx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, idx + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n} // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/alishagarric/Projects/react/volume/web/components/AccordionsListing/AccordionsListing.tsx"],"names":["React","createRef","PureComponent","AccordionsListingClassName","AccordionsListingStyle","LazyImage","NavigationClassName","AccordionsListing","constructor","props","state","openAccordion","openState","updateOpenAccordion","bind","index","accordionsContainer","accordionsRef","current","closest","children","classList","remove","setState","add","componentDidUpdate","prevProps","console","log","render","listings","map","listing","idx","name","description","images","length","image","idxx"],"mappings":"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","sourcesContent":["// Core\nimport React, { createRef, PureComponent } from \"react\";\n\n// Styles\nimport { AccordionsListingClassName, AccordionsListingStyle } from \"./styles.scss\";\nimport LazyImage from \"../../utils/lazyImage\";\nimport { CSSProperties } from \"styled-components\";\nimport { LMNTS_SiteIndustry } from \"../../constants/site/Settings\";\nimport { NavigationClassName } from \"../Navigation/styles.scss\";\nimport { Accordion } from \"../Accordion\";\nimport { throws } from \"assert\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LMNTS_AccordionsListing = {\n  listings: LMNTS_SiteIndustry[];\n  openState: boolean;\n};\n\nexport type LMNTS_AccordionsListing_State = {\n  openAccordion: number;\n  openState: boolean;\n}\n\n// Begin Data\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionsListing\n * @author Alisha Garric\n *\n */\n\n\nexport class AccordionsListing extends PureComponent<\n  LMNTS_AccordionsListing,\n  LMNTS_AccordionsListing_State\n> {\n\n  constructor(props: LMNTS_AccordionsListing) {\n    super(props);\n\n    this.state = {\n      openAccordion: 0,\n      openState: this.props.openState,\n    };\n\n    this.updateOpenAccordion = this.updateOpenAccordion.bind(this);\n  }\n\n  updateOpenAccordion(index: number) {\n    let accordionsContainer = this.accordionsRef && this.accordionsRef.current && this.accordionsRef.current.closest(\"ul\");\n\n    if (accordionsContainer){\n\n      //if open accordion is clicked, close all\n      if ( index == this.state.openAccordion ) {\n        accordionsContainer.children[index].classList.remove(\"__is-open\");\n        this.setState({openAccordion: 0});\n      }\n      // if closed accordion is clicked, open it\n      else {\n        accordionsContainer.children[this.state.openAccordion].classList.remove(\"__is-open\");\n        this.setState({openAccordion: index});\n        accordionsContainer.children[index].classList.add(\"__is-open\");\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if ( prevProps.openState == false && this.state.openAccordion != 0){\n      console.log(\"here\");\n      this.updateOpenAccordion(this.state.openAccordion);\n    }\n  }\n\n  accordionsRef: React.RefObject<HTMLDivElement> = createRef<HTMLDivElement>();\n\n  render() {\n    \n\n    let { listings } = this.props;\n    return (\n      <>\n        <li key={0} onClick={() => this.updateOpenAccordion(0)} className={`${AccordionsListingClassName}__menu-nav__list__intro ${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__intro ${NavigationClassName}__menu-nav__list__item __is-open`}>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Qquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          </p>\n        </li>\n\n        {listings.map((listing: LMNTS_SiteIndustry, idx: number) => {\n          return (\n          <AccordionsListingStyle\n            key={idx + 1}\n            className={`${AccordionsListingClassName}__menu-nav__list__item ${NavigationClassName}__menu-nav__list__item`}\n            onClick={() => this.updateOpenAccordion(idx + 1)}\n          >\n              <h2>{listing.name}</h2>\n              <div className={`${AccordionsListingClassName}__accordion`} ref={this.accordionsRef}>\n      \n                { listing.description && \n                  <p className={`${AccordionsListingClassName}__accordion__text-container`}>\n                    {listing.description}\n                  </p>\n                }\n      \n                {listing.images.length > 0 &&\n                  listing.images.map((image, idxx: number) => {\n                    return (\n                      <div className={`${AccordionsListingClassName}__accordion__image-container`} key={idxx}>\n                        <LazyImage\n                          src={image.image}\n                          alt={\"Volume Industries\"}\n                        />\n                      </div>\n                    );\n                  })\n                }\n            </div>\n          </AccordionsListingStyle>\n          );\n        })}\n      </>\n    );\n  }\n}\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}