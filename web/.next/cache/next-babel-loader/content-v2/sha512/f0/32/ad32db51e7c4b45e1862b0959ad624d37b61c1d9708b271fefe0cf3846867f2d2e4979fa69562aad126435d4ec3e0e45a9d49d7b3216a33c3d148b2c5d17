{"ast":null,"code":"/**\n *\n * CircleText.js/styles.scss.tsx\n * @author Alisha Garric\n * @description The website CircleText Styles. To be used in horizontal loop\n *\n */\n// Imports\n//////////////////////////////////////////////////////////////////////\n// Core\nimport styled from \"styled-components\";\nimport { rotating, rotatingAndShrink } from \"../../../constants/styles/Animation\";\nimport { Base } from \"../../../constants/styles/Base\";\nimport { Theme } from \"../../../constants/Theme\";\n// Constants\n// Helpers\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nexport var CircleTextClassName = \"circle-text\";\nexport var CircleTextStyle = styled.svg.withConfig({\n  displayName: \"stylesscss__CircleTextStyle\",\n  componentId: \"sc-1284bc-0\"\n})([\"&.\", \"{height:\", \";width:\", \";fill:transparent;position:absolute;top:calc(50% + calc(\", \" / -2));left:calc(\", \" / -2);overflow:visible;-webkit-animation:\", \" 15s linear infinite;-moz-animation:\", \" 15s linear infinite;-ms-animation:\", \" 15s linear infinite;-o-animation:\", \" 15s linear infinite;animation:\", \" 15s linear infinite;mix-blend-mode:overlay;text{fill:\", \";font-size:30px;text-transform:uppercase;font-weight:600;}@media (max-width:\", \"),(max-width:\", \") and (orientation:landscape) and (max-height:\", \"){top:calc(\", \" / -2);left:calc(50% + calc(\", \" / -2));-webkit-animation:\", \" 15s linear infinite;-moz-animation:\", \" 15s linear infinite;-ms-animation:\", \" 15s linear infinite;-o-animation:\", \" 15s linear infinite;animation:\", \" 15s linear infinite;}}\"], CircleTextClassName, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, rotating, rotating, rotating, rotating, rotating, Theme.Color.varForeground, Base.Media.Width.Sm + \"px\", Base.Media.Width.Md + \"px\", Base.Media.Height.Md + \"px\", function (props) {\n  return props.diameter;\n}, function (props) {\n  return props.diameter;\n}, rotatingAndShrink, rotatingAndShrink, rotatingAndShrink, rotatingAndShrink, rotatingAndShrink);","map":null,"metadata":{},"sourceType":"module"}